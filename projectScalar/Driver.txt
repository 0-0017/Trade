void round(string& pri, string& sl, string& tp);


//rounds prices based on currency
void Trade::round(string& pri, string& sl, string& tp) {
	if (pair == "XBTUSD" || pair == "ETHUSD" || pair == "LTCUSD") {
		//price
		double pricee = stod(pri);
		pricee = roundf(pricee * 100) / 100;
		pri = to_string(pricee);

		//stop loss
		double stop = stod(sl);
		stop = roundf(stop * 100) / 100;
		sl = to_string(stop);

		//take profit
		double take = stod(tp);
		take = roundf(take * 100) / 100;
		tp = to_string(take);
	}
	else if (pair == "XRPUSD") {
		//price
		double pricee = stod(pri);
		pricee = std::roundf(pricee * 1000000) / 1000000;
		pri = to_string(pricee);

		//stop loss
		double stop = stod(sl);
		stop = std::roundf(stop * 1000000) / 1000000;
		sl = to_string(stop);

		//take profit
		double take = stod(tp);
		take = std::roundf(take * 1000000) / 1000000;
		tp = to_string(take);
	}
	else if (pair == "ADAUSD") {
		//price
		double pricee = stod(pri);
		pricee = std::roundf(pricee * 10000000) / 10000000;
		pri = to_string(pricee);

		//stop loss
		double stop = stod(sl);
		stop = std::roundf(stop * 10000000) / 10000000;
		sl = to_string(stop);

		//take profit
		double take = stod(tp);
		take = std::roundf(take * 10000000) / 10000000;
		tp = to_string(take);
	}
	else {
		//price
		double pricee = stod(pri);
		pricee = std::roundf(pricee * 100000000) / 100000000;
		pri = to_string(pricee);

		//stop loss
		double stop = stod(sl);
		stop = std::roundf(stop * 100000000) / 100000000;
		sl = to_string(stop);

		//take profit
		double take = stod(tp);
		take = std::roundf(take * 100000000) / 100000000;
		tp = to_string(take);
	}
}



static string removeZeros(string str) {
	int dotIndex = str.find('.');
	if (dotIndex != string::npos) {
		int lastNonZeroIndex = str.size() - 1;
		while (lastNonZeroIndex > dotIndex && str[lastNonZeroIndex] == '0') {
			lastNonZeroIndex--;
		}
		if (lastNonZeroIndex == dotIndex) {
			str.erase(dotIndex, 1);
		}
		else {
			str.erase(lastNonZeroIndex + 1, str.size() - lastNonZeroIndex - 1);
		}
	}
	return str;
}